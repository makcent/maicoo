<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.makcent.dao.MemberMapper" >
  <resultMap id="BaseResultMap" type="com.makcent.pojo.Member" >
    <constructor >
      <idArg column="member_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="username" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="nickname" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="phone" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="gender" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="birthday" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="created_at" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="updated_at" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="status" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="role" jdbcType="SMALLINT" javaType="java.lang.Short" />
      <arg column="access_token" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="reset_token" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="auth_key" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    member_id, username, password, nickname, phone, email, gender, birthday, created_at, 
    updated_at, status, role, access_token, reset_token, auth_key
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from member
    where member_id = #{memberId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from member
    where member_id = #{memberId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.makcent.pojo.Member" >
    insert into member (member_id, username, password, 
      nickname, phone, email, 
      gender, birthday, created_at, 
      updated_at, status, role, 
      access_token, reset_token, auth_key
      )
    values (#{memberId,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{gender,jdbcType=TINYINT}, #{birthday,jdbcType=TIMESTAMP}, now(),
      now(), #{status,jdbcType=TINYINT}, #{role,jdbcType=SMALLINT},
      #{accessToken,jdbcType=VARCHAR}, #{resetToken,jdbcType=VARCHAR}, #{authKey,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.makcent.pojo.Member" >
    insert into member
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="accessToken != null" >
        access_token,
      </if>
      <if test="resetToken != null" >
        reset_token,
      </if>
      <if test="authKey != null" >
        auth_key,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="memberId != null" >
        #{memberId,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null" >
        now(),
      </if>
      <if test="updatedAt != null" >
        now(),
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="role != null" >
        #{role,jdbcType=SMALLINT},
      </if>
      <if test="accessToken != null" >
        #{accessToken,jdbcType=VARCHAR},
      </if>
      <if test="resetToken != null" >
        #{resetToken,jdbcType=VARCHAR},
      </if>
      <if test="authKey != null" >
        #{authKey,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.makcent.pojo.Member" >
    update member
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = now(),
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=SMALLINT},
      </if>
      <if test="accessToken != null" >
        access_token = #{accessToken,jdbcType=VARCHAR},
      </if>
      <if test="resetToken != null" >
        reset_token = #{resetToken,jdbcType=VARCHAR},
      </if>
      <if test="authKey != null" >
        auth_key = #{authKey,jdbcType=VARCHAR},
      </if>
    </set>
    where member_id = #{memberId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.makcent.pojo.Member" >
    update member
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = now(),
      status = #{status,jdbcType=TINYINT},
      role = #{role,jdbcType=SMALLINT},
      access_token = #{accessToken,jdbcType=VARCHAR},
      reset_token = #{resetToken,jdbcType=VARCHAR},
      auth_key = #{authKey,jdbcType=VARCHAR}
    where member_id = #{memberId,jdbcType=BIGINT}
  </update>
</mapper>